name: Upload Code Coverage to Codecov

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

env:
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  POSTGRESQL_HOST: ${{ vars.POSTGRESQL_HOST }}
  POSTGRESQL_USER: ${{ vars.POSTGRESQL_USER }}
  POSTGRESQL_PASSWORD: ${{ vars.POSTGRESQL_PASSWORD }}
  POSTGRESQL_PORT: ${{ vars.POSTGRESQL_PORT }}
  SQLSERVER_HOST: ${{ vars.SQLSERVER_HOST }}
  SQLSERVER_USER: ${{ vars.SQLSERVER_USER }}
  SQLSERVER_PASSWORD: ${{ vars.SQLSERVER_PASSWORD }}
  SQLSERVER_PORT: ${{ vars.SQLSERVER_PORT }}
  MONGO_HOST: ${{ vars.MONGO_HOST }}
  MONGO_USER: ${{ vars.MONGO_USER }}
  MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
  MONGO_PORT: ${{ vars.MONGO_PORT }}
  BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate coverage report

        run: |
          curl https://api.ipify.org
          pip install -U pip
          pip install poetry>=1.3.2
          poetry install --with dev
          poetry run coverage run -m pytest tests/
          poetry run coverage xml -o coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          name: codecov-pd-extras
          verbose: true
