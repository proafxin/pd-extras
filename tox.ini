[tox]
envlist =
    tests
    ; py3, tests, formatting, docs-{linux, win32}
skipsdist = true

# docker run -d --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=secret  mysql:latest
# docker run --name some-postgres -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -d postgres
# docker run  -e "ACCEPT_EULA=Y" -e "MSSQL_TCP_PORT=1433" -e "MSSQL_SA_PASSWORD=H@5h1rama"  -p 1433:1433  --name sqlserver  -d mcr.microsoft.com/mssql/server:2022-latest



[testenv]

allowlist_externals = *
isolated_build = true

platform =
    linux: linux
    win32: win32
passenv = *
basepython = python3
recreate = false

deps =
    poetry >= 1.7.1

[testenv:tests]

commands = 
    poetry install --with dev
    poetry run coverage run -m pytest .
    poetry run coverage report -m
    poetry run coverage xml -o coverage.xml

[isort]
profile = black
multi_line_output = 3
src_paths=pandas_utils
py_version=310
skip=.gitignore, env/, .tox

[bandit]
# B101: Test for use of assert
# B104: Test for binding to all interfaces
# B110: Try, Except, Pass detected.
# B303: Use of insecure MD2, MD4, MD5, or SHA1 hash function.
# B311: Standard pseudo-random generators are not suitable for security/cryptographic purposes
# B314: Blacklisted calls to xml.etree.ElementTree
# B318: Blacklisted calls to xml.dom.minidom
# B404: Import of subprocess module
# B405: import xml.etree
# B408: import xml.minidom
# B413: import pyCrypto
# B506: Test for use of yaml load
# B602: Test for use of popen with shell equals true
# B603: Test for use of subprocess without shell equals true
# B607: Test for starting a process with a partial path
skips = B101,B104,B110,B303,B311,B314,B318,B404,B405,B408,B413,B506,B602,B603,B607,B608
exclude = tests

[flake8]
ignore = E203, E266, E501, W503, F403, F401
max-line-length = 88
max-complexity = 18
select = B,C,E,F,W,T4,B9
[mypy]

exclude = (?x)(
    .tox/    # files named "one.py"
    | env/  # or files ending with "two.pyi"
    | docs/   # or files starting with "three."
    | venv/
  )

[mypy-google.cloud.*]
disable_error_code = attr-defined

[testenv:formatting]

commands =
    poetry install --only formatting
    poetry run flake8 pd_extras
    poetry run black .
    poetry run isort --atomic pd_extras tests
    poetry run bandit -r pd_extras --ini tox.ini
    ; poetry run mypy .

[testenv:docs-win32]

passenv = *
allowlist_externals = *

commands =
    poetry install --with docs
    .\docs\\make.bat clean
    .\docs\\make.bat html



[testenv:docs-linux]

allowlist_externals = *

changedir = docs
commands = 
    poetry install --with docs
    poetry run sphinx-apidoc -f -o source/ ../ ../tests/
    make clean
    make html
